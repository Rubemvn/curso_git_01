
ADD
use o comando `git add 'exemplo.txt'` 
    para adcionar um arquivo específico
use o comando `git add .`
    para adcionar todos os arquivos de uma vez só

COMMIT
use o comando `git commit 'exemplo.txt' -m "descrição"`
    para commitar um arquivo específico
use o comando `git commit -a -m "descrição"`
    para commitar todos os arquivos de uma vez só

PUSH
use o comando `git push`
    para enviar as alterações e novos arquivos

PULL
use o comando `git pull`
    para sincronizar o local com as mudanças do remoto
        ex: quando alguém atualiza ou adciona alguma funcionalidade
            da aplicação, então se utiliza o `git pull` para atualizar
            essas funcionalidades nos arquivos locais.

CLONE   
use o comando `git clone 'url do repositório(ex: https://github.com/Rubemvn/curso_git_01.git)' .`
    para clonar um repositório e baixar ele nos arquivos locais
    
LOG
use o comando `git log`
    para verificar o histórica de commit's feitos no seu repositório

MV
use o comando `git mv './exemplo_01/exemplo.txt' './exemplo_02/exemplo.txt'`
    para mover o arquivo de um local para o outro
use o comando `git mv './ex_01/exemplo.txt' './ex_01/exemplo_MODIFICADO.txt'`
    para alterar o nome de um determinado arquivo

CHECKOUT
use o comando `git checkout 'exemplo_01/exemplo.txt'`
    para o arquivo voltar a seu estado anterior a edição

IGNORE
crie um arquivo com o nome `.gitignore` e envie ele para o repositório
    dentro desse arquivo coloque o nome dos arquivos ou pastas que 
    vão ser ignorados e não seram enviados para o repositório
        ex: "exemplo.txt
            pasta_de_exemplo/*"

